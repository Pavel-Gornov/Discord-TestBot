from discord.ui import *
from discord import Interaction, SelectOption, Embed
from lib.utils import TBS, CONFIG, Color, get_guild_lang, DB


class SettingsView(View):
    class SettingsSelect(Select):
        def __init__(self, language: str):
            # TODO: –ü—Ä–æ–¥—É–º–∞—Ç—å –±–æ–ª—å—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –≤–Ω–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫–∏ TBS
            placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å."
            options = [
                SelectOption(label="–Ø–∑—ã–∫", description="–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –ë–æ—Ç–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", emoji="üåê", value="1",
                             default=False),
                SelectOption(label="–°—Ç—Ä–æ–∫–∞ 2", description="–û–ø–∏—Å–∞–Ω–∏–µ 2", emoji="ü´•", value="–ó–Ω–∞—á–µ–Ω–∏–µ 2", default=False),
                SelectOption(label="–°—Ç—Ä–æ–∫–∞ 3", description="–û–ø–∏—Å–∞–Ω–∏–µ 3", emoji="ü´•", value="–ó–Ω–∞—á–µ–Ω–∏–µ 3", default=True),
            ]
            super().__init__(min_values=1, max_values=1, options=options, placeholder=placeholder)

        async def callback(self, interaction: Interaction):
            language = get_guild_lang(interaction.guild)
            if self.view.author_id == interaction.user.id:
                if self.values[0] == "1":
                    embed = Embed(title="–í—ã–±–æ—Ä —è–∑—ã–∫–∞", colour=Color.BOT)
                    view = LanguageChangingView(interaction.user.id, language)
                    await interaction.response.send_message(embed=embed, view=view)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —ç—Ç–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.",
                                                        ephemeral=True)

    def __init__(self, author_id: int, language: str):
        self.author_id = author_id
        super().__init__(timeout=300, disable_on_timeout=True)
        self.add_item(self.SettingsSelect(language))


class LanguageChangingView(View):
    class LanguageChangingSelector(Select):
        def __init__(self, language: str):
            placeholder = "–ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã–±–µ—Ä–∏—Ç–µ?"
            options = []
            # TODO: –†–∞—Å–ø–∏—Å–∞—Ç—å —è–∑—ã–∫–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–∞–º –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏.
            for lang in CONFIG.LANGUAGES:
                options.append(SelectOption(label=lang, value=lang, emoji="üåê", default=(lang == language)))
            super().__init__(min_values=1, max_values=1, options=options, placeholder=placeholder)

        async def callback(self, interaction: Interaction):
            if self.view.author_id == interaction.user.id:
                # TODO: –ü–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
                DB.change_server_settings(interaction.guild.id, lang=self.values[0])
                await interaction.response.send_message(f"–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –í—ã –≤—ã–±—Ä–∞–ª–∏: {self.values[0]}")
            else:
                await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —ç—Ç–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.",
                                                        ephemeral=True)

    def __init__(self, author_id: int, language: str):
        self.author_id = author_id
        super().__init__(timeout=300, disable_on_timeout=True)
        self.add_item(self.LanguageChangingSelector(language))
