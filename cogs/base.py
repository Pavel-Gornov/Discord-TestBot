import random
from typing import Optional

import discord
import aiohttp
from discord.ext import commands

from storage import *

COG_NAME: final = "–æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"


class BaseCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"–ú–æ–¥—É–ª—å {COG_NAME} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")

    @commands.command(aliases=["error", "hstat" "httpstat", "—Å–µ—Ç—å", "–∫–æ–¥", "—Å—Ç–∞—Ç—É—Å"], help="command_http_info")
    async def http(self, ctx, status_code: Optional[int] = 200):
        if status_code in REQUEST_CODES:
            await ctx.reply(f"https://http.cat/{status_code}")
        else:
            await ctx.reply("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞.")

    @commands.command(aliases=["ava", "–∞–≤–∞", "–∞–≤–∞—Ç–∞—Ä–∫–∞", "–∞–≤–∞—Ç–∞—Ä"], help="command_avatar_info")
    async def avatar(self, ctx, user: Optional[discord.Member]):
        author = user if user else ctx.message.author
        embed = discord.Embed(color=COLOR_CODES["bot"], title=f'–ê–≤–∞—Ç–∞—Ä {author}', description=f"id: {author.id}")
        embed.set_image(url=author.avatar.url)
        await ctx.reply(embed=embed)

    @commands.command(aliases=["rand", "—Ä–∞–Ω–¥", "—Å–ª—É—á–∞–π–Ω—ã–π", "—Å–ª—É—á"], help="command_random_info")
    async def random(self, ctx, *, args):
        await ctx.reply(random.choice(args.split(";")))

    @commands.command(aliases=["m", "—è", "—Å–æ–æ–±—â–µ–Ω–∏–µ"], help="command_me_info")
    @commands.has_permissions(administrator=True)
    @commands.guild_only()
    async def me(self, ctx, *, message):
        await ctx.send(message, reference=ctx.message.reference)
        await ctx.message.delete()

    @commands.command(aliases=["hi", "hey", "–ü—Ä–∏–≤–µ—Ç", "–ø—Ä–∏–≤–µ—Ç", "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"], help="command_hello_info")
    async def hello(self, ctx):
        await ctx.send(f'{random.choice(GREETINGS_LIST)}, {ctx.message.author.mention}!')

    @commands.command(aliases=["c", "–∫–æ—Ç", "–ö–æ—Ç", "Cat", "üê±"], help="command_cat_info")
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def cat(self, ctx):
        async with ctx.channel.typing():
            async with aiohttp.ClientSession() as session:
                async with session.get("https://api.thecatapi.com/v1/images/search?mime_types=jpg,png") as response:
                    response = await response.json()
            embed = discord.Embed(color=COLOR_CODES["bot"], title="–°–ª—É—á–∞–π–Ω—ã–π –ö–æ—Ç")
            embed.set_image(url=response[0]["url"])
        await ctx.reply(embed=embed)

    @commands.command(aliases=["d", "—Å–æ–±–∞–∫–∞", "–ü—ë—Å", "–°–æ–±–∞–∫–∞", "Dog", "üê∂"], help="command_dog_info")
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def dog(self, ctx):
        async with ctx.channel.typing():
            async with aiohttp.ClientSession() as session:
                async with session.get("https://api.thedogapi.com/v1/images/search?mime_types=jpg,png") as response:
                    response = await response.json()
            embed = discord.Embed(color=COLOR_CODES["bot"], title="–°–ª—É—á–∞–π–Ω–∞—è –°–æ–±–∞–∫–∞")
            embed.set_image(url=response[0]["url"])
        await ctx.reply(embed=embed)

    @commands.command(aliases=["–ª–∏—Å–∞", "–ª–∏—Å", "Fox", "–õ–∏—Å", "–õ–∏—Å–∞", "ü¶ä"], help="command_fox_info")
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def fox(self, ctx):
        async with ctx.channel.typing():
            async with aiohttp.ClientSession() as session:
                async with session.get("https://randomfox.ca/floof") as response:
                    response = await response.json()
            embed = discord.Embed(color=COLOR_CODES["bot"], title="–°–ª—É—á–∞–π–Ω–∞—è –õ–∏—Å–∞")
            embed.set_image(url=response["image"])
        await ctx.reply(embed=embed)


def setup(bot: discord.Bot):
    bot.add_cog(BaseCommands(bot))
